#!/bin/sh

url_decode() {
        echo -e "$(echo -n "$1" | sed 's/+/ /g;s/%\(..\)/\\x\1/g;')"
        return 0
}

get_all_param() {
	local str=$QUERY_STRING
	[ "${str%&}" = "$str" ] && str="$str&"

	while [ -n "$str" ]; do
		pair=${str%%&*}
		var=${pair%=*}
		val=${pair#*=}
		str=${str#*&}
		echo "$var $(url_decode $val)"
	done

	return 0
}

get_param() {
	request_str="$1"
	param_name=$2"="
	temp1=${request_str##*${param_name}} 
	[ "$temp1" = "$1" ] && {
		#未找到参数
		echo ""
		return 1
	}
	echo $(url_decode ${temp1%%&*})

	return 0
}


get_request_param() {
	get_param "$QUERY_STRING" "$1"
	return $?
}

decode_cst()
{
        local asii_c=`printf "%d" "'$1"`
        #echo $asii_a | awk '{printf("%c", $1)}' 
        asii_c=`expr $asii_c + 1`
        local t=`printf "%x" $asii_c`
        printf "\\x$t"
}


comma_flag=0
str_to_json() {
	if [ "$1" = "}" ];then
		echo -n "}"
	else
		local json_str=$1
		local json_key=${json_str%%:*}
		local json_val=${json_str#*:}
		if [ "$json_val" = "{" ];then
			[ $comma_flag -eq 1 ] && {
				echo -n ","
			}
			echo -n "\"${json_key}\":${json_val}"
			let comma_flag=0	
		else
			if [ $comma_flag -eq 0 ];then 
				let comma_flag=1	
			else
				echo -n ","
			fi
			echo -n "\"${json_key}\":${json_val}"
		fi
	fi
}
